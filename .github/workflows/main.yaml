name: main
on: [push, pull_request]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - run: deno install
    - run: deno task check
    - run: |
        set -ex
        [[ "$(jq -r .version deno.json)" = "$(jq -r .version package.json)" ]]

  publish:
    needs: [check]
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v1
      with:
        deno-version: v2.x
    - uses: pnpm/action-setup@v4
      with:
        version: latest
        run_install: true
    - run: deno install
    - if: github.ref_type == 'branch'
      run: |
        jq \
          --arg build "$GITHUB_RUN_NUMBER" \
          --arg commit "${GITHUB_SHA::8}" \
          '.version = .version + "-dev." + $build + "+" + $commit' \
          deno.json > deno.json.tmp
        mv deno.json.tmp deno.json
        jq \
          --arg build "$GITHUB_RUN_NUMBER" \
          '.version = .version + "-dev." + $build' \
          package.json > package.json.tmp
        mv package.json.tmp package.json
    - if: github.ref_type == 'tag'
      run: |
        set -ex
        [[ "$(jq -r .version deno.json)" = "$GITHUB_REF_NAME" ]]
        [[ "$(jq -r .version package.json)" = "$GITHUB_REF_NAME" ]]
    - if: github.event_name == 'pull_request'
      run: |
        deno publish --dry-run --allow-dirty
        pnpm publish --access public --no-git-checks --force --dry-run
    - if: github.event_name == 'push'
      run: |
        deno publish --allow-dirty
        pnpm config set //registry.npmjs.org/:_authToken "$NPM_AUTH_TOKEN"
        if [[ "$GITHUB_REF_TYPE" = "tag" ]]; then
          pnpm publish --access public --no-git-checks --force
        else
          pnpm publish --access public --no-git-checks --force --tag dev
        fi
      env:
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        NPM_CONFIG_PROVENANCE: "true"
